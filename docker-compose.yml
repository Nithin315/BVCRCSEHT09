version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fintech-postgres
    environment:
      POSTGRES_DB: fintech_platform
      POSTGRES_USER: fintech_user
      POSTGRES_PASSWORD: fintech_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fintech-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fintech-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fintech-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fintech-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://fintech_user:fintech_password@postgres:5432/fintech_platform
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-here
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - fintech-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fintech-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - fintech-network
    restart: unless-stopped

  # ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: fintech-ml
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://fintech_user:fintech_password@postgres:5432/fintech_platform
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    volumes:
      - ./ml-service:/app
    networks:
      - fintech-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fintech-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - ml-service
    networks:
      - fintech-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  fintech-network:
    driver: bridge
